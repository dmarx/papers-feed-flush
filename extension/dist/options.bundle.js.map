{"version":3,"file":"options.bundle.js","sources":["../../utils/logger.ts","../../options.ts"],"sourcesContent":["// utils/logger.ts\n// Logging utility wrapping loguru\n\n/**\n * Logger class for consistent logging throughout the extension\n */\nexport class Logger {\n  constructor(private module: string) {}\n  \n  /**\n   * Log debug message\n   */\n  debug(message: string, data?: any): void {\n    console.debug(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log info message\n   */\n  info(message: string, data?: any): void {\n    console.info(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log warning message\n   */\n  warning(message: string, data?: any): void {\n    console.warn(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log error message\n   */\n  error(message: string, data?: any): void {\n    console.error(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n}\n\n/**\n * Loguru mock for browser extension use\n */\nclass LoguruMock {\n  /**\n   * Get logger for a module\n   */\n  getLogger(module: string): Logger {\n    return new Logger(module);\n  }\n}\n\n// Export singleton instance\nexport const loguru = new LoguruMock();\n","// options.ts\n// Paper tracker extension options page with simple form-based URL pattern management\n\nimport { loguru } from './utils/logger';\n\nconst logger = loguru.getLogger('options');\n\n// Types for URL patterns\nexport interface SourcePattern {\n  id: string;             // Unique identifier for this source\n  name: string;           // Display name for this source\n  urlPattern: string;     // Regex pattern to match URLs\n  idRegex: string;        // Regex to extract paper ID\n}\n\n// Types for all settings\nexport interface Settings {\n  githubRepo?: string;     // GitHub repository for storage\n  githubToken?: string;    // GitHub access token\n  sourcePatterns: SourcePattern[]; // URL patterns for paper detection\n}\n\n// Default URL patterns\nconst DEFAULT_PATTERNS: SourcePattern[] = [\n  {\n    id: 'arxiv',\n    name: 'arXiv',\n    urlPattern: 'arxiv\\\\.org\\\\/(abs|pdf)\\\\/([0-9]+\\\\.[0-9]+)',\n    idRegex: 'arxiv\\\\.org\\\\/(abs|pdf)\\\\/([0-9]+\\\\.[0-9]+)'\n  },\n  {\n    id: 'doi',\n    name: 'DOI',\n    urlPattern: 'doi\\\\.org\\\\/([\\\\w\\\\.\\\\-\\\\/]+)',\n    idRegex: 'doi\\\\.org\\\\/([\\\\w\\\\.\\\\-\\\\/]+)'\n  }\n];\n\n// Current state\nlet currentPatterns: SourcePattern[] = [];\nlet editingIndex: number | null = null;\n\n// Helper to set form values\nfunction setFormValues(settings: Settings): void {\n  // GitHub settings\n  if (settings.githubRepo) {\n    (document.getElementById('repo') as HTMLInputElement).value = settings.githubRepo;\n  }\n  if (settings.githubToken) {\n    // Don't show the actual token, just indicate it's set\n    (document.getElementById('token') as HTMLInputElement).placeholder = '••••••••••••••••••••••';\n  }\n\n  // Store patterns and populate table\n  currentPatterns = settings.sourcePatterns || DEFAULT_PATTERNS;\n  refreshPatternsTable();\n}\n\n// Helper to refresh the patterns table\nfunction refreshPatternsTable(): void {\n  const tbody = document.getElementById('patterns-tbody');\n  const noPatterns = document.getElementById('no-patterns');\n  \n  if (!tbody || !noPatterns) return;\n  \n  // Clear the table\n  tbody.innerHTML = '';\n  \n  // Show/hide \"no patterns\" message\n  if (currentPatterns.length === 0) {\n    noPatterns.style.display = 'block';\n    document.getElementById('patterns-table')!.style.display = 'none';\n  } else {\n    noPatterns.style.display = 'none';\n    document.getElementById('patterns-table')!.style.display = 'table';\n    \n    // Add each pattern to the table\n    currentPatterns.forEach((pattern, index) => {\n      const row = document.createElement('tr');\n      \n      // Source ID\n      const idCell = document.createElement('td');\n      idCell.textContent = pattern.id;\n      row.appendChild(idCell);\n      \n      // Source Name\n      const nameCell = document.createElement('td');\n      nameCell.textContent = pattern.name;\n      row.appendChild(nameCell);\n      \n      // URL Pattern\n      const urlPatternCell = document.createElement('td');\n      urlPatternCell.textContent = pattern.urlPattern;\n      row.appendChild(urlPatternCell);\n      \n      // Paper ID Regex\n      const idRegexCell = document.createElement('td');\n      idRegexCell.textContent = pattern.idRegex;\n      row.appendChild(idRegexCell);\n      \n      // Actions\n      const actionsCell = document.createElement('td');\n      \n      // Edit button\n      const editButton = document.createElement('button');\n      editButton.className = 'action-btn';\n      editButton.textContent = 'Edit';\n      editButton.addEventListener('click', () => editPattern(index));\n      actionsCell.appendChild(editButton);\n      \n      // Space\n      actionsCell.appendChild(document.createTextNode(' '));\n      \n      // Remove button\n      const removeButton = document.createElement('button');\n      removeButton.className = 'action-btn';\n      removeButton.textContent = 'Remove';\n      removeButton.addEventListener('click', () => removePattern(index));\n      actionsCell.appendChild(removeButton);\n      \n      row.appendChild(actionsCell);\n      \n      tbody.appendChild(row);\n    });\n  }\n}\n\n// Function to edit a pattern\nfunction editPattern(index: number): void {\n  const pattern = currentPatterns[index];\n  \n  // Populate form with pattern values\n  (document.getElementById('sourceId') as HTMLInputElement).value = pattern.id;\n  (document.getElementById('sourceName') as HTMLInputElement).value = pattern.name;\n  (document.getElementById('urlPattern') as HTMLInputElement).value = pattern.urlPattern;\n  (document.getElementById('idRegex') as HTMLInputElement).value = pattern.idRegex;\n  \n  // Set editing state\n  editingIndex = index;\n  \n  // Change add button to save\n  const addButton = document.getElementById('add-pattern');\n  if (addButton) {\n    addButton.textContent = 'Save Changes';\n  }\n}\n\n// Function to remove a pattern\nfunction removePattern(index: number): void {\n  if (confirm(`Are you sure you want to remove \"${currentPatterns[index].name}\"?`)) {\n    currentPatterns.splice(index, 1);\n    refreshPatternsTable();\n    \n    // Clear form if we were editing this pattern\n    if (editingIndex === index) {\n      clearPatternForm();\n    }\n  }\n}\n\n// Function to add or update a pattern\nfunction addOrUpdatePattern(): void {\n  // Get values from form\n  const sourceId = (document.getElementById('sourceId') as HTMLInputElement).value.trim();\n  const sourceName = (document.getElementById('sourceName') as HTMLInputElement).value.trim();\n  const urlPattern = (document.getElementById('urlPattern') as HTMLInputElement).value.trim();\n  const idRegex = (document.getElementById('idRegex') as HTMLInputElement).value.trim();\n  \n  // Validate input\n  if (!sourceId || !sourceName || !urlPattern || !idRegex) {\n    showStatus('All fields are required', true);\n    return;\n  }\n  \n  // Try to create RegExp objects to validate patterns\n  try {\n    new RegExp(urlPattern);\n    new RegExp(idRegex);\n  } catch (e) {\n    showStatus(`Invalid regular expression: ${e instanceof Error ? e.message : 'Unknown error'}`, true);\n    return;\n  }\n  \n  // Check for duplicate ID (except when editing)\n  const hasDuplicate = currentPatterns.some((pattern, index) => \n    pattern.id === sourceId && index !== editingIndex\n  );\n  \n  if (hasDuplicate) {\n    showStatus(`Source ID \"${sourceId}\" is already used. IDs must be unique.`, true);\n    return;\n  }\n  \n  // Create pattern object\n  const pattern: SourcePattern = {\n    id: sourceId,\n    name: sourceName,\n    urlPattern,\n    idRegex\n  };\n  \n  // Add or update\n  if (editingIndex !== null) {\n    // Update existing\n    currentPatterns[editingIndex] = pattern;\n    \n    // Reset editing state\n    editingIndex = null;\n    \n    // Reset button text\n    const addButton = document.getElementById('add-pattern');\n    if (addButton) {\n      addButton.textContent = 'Add Pattern';\n    }\n    \n    showStatus(`Pattern \"${sourceName}\" updated`);\n  } else {\n    // Add new\n    currentPatterns.push(pattern);\n    showStatus(`Pattern \"${sourceName}\" added`);\n  }\n  \n  // Refresh table and clear form\n  refreshPatternsTable();\n  clearPatternForm();\n}\n\n// Clear the pattern form\nfunction clearPatternForm(): void {\n  (document.getElementById('sourceId') as HTMLInputElement).value = '';\n  (document.getElementById('sourceName') as HTMLInputElement).value = '';\n  (document.getElementById('urlPattern') as HTMLInputElement).value = '';\n  (document.getElementById('idRegex') as HTMLInputElement).value = '';\n  \n  // Reset editing state\n  editingIndex = null;\n  \n  // Reset button text\n  const addButton = document.getElementById('add-pattern');\n  if (addButton) {\n    addButton.textContent = 'Add Pattern';\n  }\n}\n\n// Test the current pattern\nfunction testPattern(): void {\n  // Get values from form\n  const urlPattern = (document.getElementById('urlPattern') as HTMLInputElement).value.trim();\n  const idRegex = (document.getElementById('idRegex') as HTMLInputElement).value.trim();\n  \n  if (!urlPattern || !idRegex) {\n    showStatus('URL Pattern and Paper ID Regex are required for testing', true);\n    return;\n  }\n  \n  // Create RegExp objects\n  try {\n    new RegExp(urlPattern);\n    new RegExp(idRegex);\n  } catch (e) {\n    showStatus(`Invalid regular expression: ${e instanceof Error ? e.message : 'Unknown error'}`, true);\n    return;\n  }\n  \n  // Prompt for test URL\n  const testUrl = prompt('Enter a URL to test your patterns:');\n  if (!testUrl) return;\n  \n  // Test URL pattern\n  let urlMatch: boolean;\n  try {\n    const urlRegex = new RegExp(urlPattern);\n    urlMatch = urlRegex.test(testUrl);\n  } catch (e) {\n    showStatus(`Error testing URL pattern: ${e instanceof Error ? e.message : 'Unknown error'}`, true);\n    return;\n  }\n  \n  if (!urlMatch) {\n    showStatus(`URL does not match the URL pattern`, true);\n    return;\n  }\n  \n  // Test ID pattern\n  try {\n    const regex = new RegExp(idRegex);\n    const match = testUrl.match(regex);\n    \n    if (match && match.length > 1) {\n      showStatus(`Success! Extracted paper ID: \"${match[1]}\"`);\n    } else if (match) {\n      showStatus(`URL matches pattern but no capture group found. Add parentheses around the ID part.`, true);\n    } else {\n      showStatus(`URL does not match the Paper ID pattern`, true);\n    }\n  } catch (e) {\n    showStatus(`Error testing Paper ID pattern: ${e instanceof Error ? e.message : 'Unknown error'}`, true);\n  }\n}\n\n// Helper to get form values\nfunction getFormValues(): Settings {\n  const githubRepo = (document.getElementById('repo') as HTMLInputElement).value.trim();\n  const githubToken = (document.getElementById('token') as HTMLInputElement).value.trim();\n  \n  return {\n    githubRepo: githubRepo || undefined,\n    githubToken: githubToken || undefined,\n    sourcePatterns: currentPatterns.length > 0 ? currentPatterns : DEFAULT_PATTERNS\n  };\n}\n\n// Display status message\nfunction showStatus(message: string, isError = false): void {\n  const status = document.getElementById('status');\n  if (!status) return;\n  \n  status.textContent = message;\n  status.className = `status ${isError ? 'error' : 'success'}`;\n\n  // Clear status after 3 seconds if it's a success message\n  if (!isError) {\n    setTimeout(() => {\n      if (status) {\n        status.textContent = '';\n        status.className = 'status';\n      }\n    }, 3000);\n  }\n}\n\n// Validate settings before saving\nasync function validateSettings(settings: Settings): Promise<void> {\n  // Validate repository format if provided\n  if (settings.githubRepo && !/^[\\w-]+\\/[\\w-]+$/.test(settings.githubRepo)) {\n    throw new Error('Invalid repository format. Use username/repository');\n  }\n\n  // Validate the token by making a test API call if both token and repo are provided\n  if (settings.githubRepo && settings.githubToken) {\n    const response = await fetch(`https://api.github.com/repos/${settings.githubRepo}`, {\n      headers: {\n        'Authorization': `token ${settings.githubToken}`,\n        'Accept': 'application/vnd.github.v3+json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Invalid token or repository. Please check your credentials.');\n    }\n  }\n\n  // Validate URL patterns\n  if (settings.sourcePatterns.length === 0) {\n    throw new Error('At least one URL pattern is required.');\n  }\n  \n  // Check for duplicate IDs\n  const idSet = new Set<string>();\n  for (const pattern of settings.sourcePatterns) {\n    if (idSet.has(pattern.id)) {\n      throw new Error(`Duplicate source ID: ${pattern.id}. Each source must have a unique ID.`);\n    }\n    idSet.add(pattern.id);\n  }\n  \n  // Validate each pattern\n  for (const pattern of settings.sourcePatterns) {\n    if (!pattern.id) {\n      throw new Error('Each pattern must have a source ID.');\n    }\n    if (!pattern.name) {\n      throw new Error('Each pattern must have a source name.');\n    }\n    if (!pattern.urlPattern) {\n      throw new Error('Each pattern must have a URL pattern.');\n    }\n    if (!pattern.idRegex) {\n      throw new Error('Each pattern must have a paper ID regex.');\n    }\n    \n    // Check that patterns are valid regex\n    try {\n      new RegExp(pattern.urlPattern);\n      new RegExp(pattern.idRegex);\n    } catch (e) {\n      throw new Error(`Invalid regular expression: ${e instanceof Error ? e.message : 'Unknown error'}`);\n    }\n  }\n}\n\n// Save settings\nasync function saveSettings(settings: Settings): Promise<void> {\n  try {\n    await chrome.storage.sync.set({\n      githubRepo: settings.githubRepo,\n      githubToken: settings.githubToken,\n      sourcePatterns: settings.sourcePatterns\n    });\n    logger.info('Settings saved successfully');\n  } catch (error) {\n    logger.error('Error saving settings', error);\n    throw error;\n  }\n}\n\n// Load settings\nasync function loadSettings(): Promise<Settings> {\n  try {\n    const items = await chrome.storage.sync.get(['githubRepo', 'githubToken', 'sourcePatterns']);\n    return {\n      githubRepo: items.githubRepo,\n      githubToken: items.githubToken,\n      sourcePatterns: items.sourcePatterns || DEFAULT_PATTERNS\n    };\n  } catch (error) {\n    logger.error('Error loading settings', error);\n    return { sourcePatterns: DEFAULT_PATTERNS };\n  }\n}\n\n// Export settings to JSON file\nfunction exportSettings(): void {\n  try {\n    const settings = getFormValues();\n    const json = JSON.stringify(settings, null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    \n    // Create download link\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'paper-tracker-settings.json';\n    a.click();\n    \n    // Clean up\n    URL.revokeObjectURL(url);\n    \n    showStatus('Settings exported successfully!');\n  } catch (error) {\n    showStatus(`Error exporting settings: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n  }\n}\n\n// Import settings from JSON file\nfunction importSettings(): void {\n  // Create file input\n  const input = document.createElement('input');\n  input.type = 'file';\n  input.accept = 'application/json';\n  \n  input.addEventListener('change', async (event) => {\n    const file = (event.target as HTMLInputElement).files?.[0];\n    if (!file) return;\n    \n    try {\n      const text = await file.text();\n      const settings = JSON.parse(text) as Settings;\n      \n      // Validate imported settings\n      await validateSettings(settings);\n      \n      // Update current patterns and refresh table\n      currentPatterns = settings.sourcePatterns;\n      refreshPatternsTable();\n      \n      // Apply GitHub settings\n      if (settings.githubRepo) {\n        (document.getElementById('repo') as HTMLInputElement).value = settings.githubRepo;\n      }\n      if (settings.githubToken) {\n        (document.getElementById('token') as HTMLInputElement).value = settings.githubToken;\n      }\n      \n      showStatus('Settings imported successfully! Click Save to apply changes.');\n    } catch (error) {\n      showStatus(`Error importing settings: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n    }\n  });\n  \n  // Trigger file selection\n  input.click();\n}\n\n// Initialize options page\ndocument.addEventListener('DOMContentLoaded', async () => {\n  try {\n    // Load current settings\n    const settings = await loadSettings();\n    \n    // Apply settings to form\n    setFormValues(settings);\n    \n    // Set up add/edit pattern button\n    const addButton = document.getElementById('add-pattern');\n    if (addButton) {\n      addButton.addEventListener('click', addOrUpdatePattern);\n    }\n    \n    // Set up test pattern button\n    const testButton = document.getElementById('test-pattern');\n    if (testButton) {\n      testButton.addEventListener('click', testPattern);\n    }\n\n    // Add save button handler\n    const saveButton = document.getElementById('save');\n    if (saveButton) {\n      saveButton.addEventListener('click', async () => {\n        try {\n          const settings = getFormValues();\n          await validateSettings(settings);\n          await saveSettings(settings);\n          showStatus('Settings saved successfully!');\n        } catch (error) {\n          showStatus(`Error: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n        }\n      });\n    }\n    \n    // Add export/import buttons\n    const exportButton = document.getElementById('export-settings');\n    if (exportButton) {\n      exportButton.addEventListener('click', exportSettings);\n    }\n    \n    const importButton = document.getElementById('import-settings');\n    if (importButton) {\n      importButton.addEventListener('click', importSettings);\n    }\n  } catch (error) {\n    showStatus(`Error loading settings: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n  }\n});\n"],"names":[],"mappings":"AAAA;AACA;AAEA;;AAEG;MACU,MAAM,CAAA;AACjB,IAAA,WAAA,CAAoB,MAAc,EAAA;QAAd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KAAI;AAEtC;;AAEG;IACH,KAAK,CAAC,OAAe,EAAE,IAAU,EAAA;QAC/B,OAAO,CAAC,KAAK,CAAC,CAAA,CAAA,EAAI,IAAI,CAAC,MAAM,CAAK,EAAA,EAAA,OAAO,CAAE,CAAA,EAAE,IAAI,KAAK,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;KAC9E;AAED;;AAEG;IACH,IAAI,CAAC,OAAe,EAAE,IAAU,EAAA;QAC9B,OAAO,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,IAAI,CAAC,MAAM,CAAK,EAAA,EAAA,OAAO,CAAE,CAAA,EAAE,IAAI,KAAK,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;KAC7E;AAED;;AAEG;IACH,OAAO,CAAC,OAAe,EAAE,IAAU,EAAA;QACjC,OAAO,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,IAAI,CAAC,MAAM,CAAK,EAAA,EAAA,OAAO,CAAE,CAAA,EAAE,IAAI,KAAK,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;KAC7E;AAED;;AAEG;IACH,KAAK,CAAC,OAAe,EAAE,IAAU,EAAA;QAC/B,OAAO,CAAC,KAAK,CAAC,CAAA,CAAA,EAAI,IAAI,CAAC,MAAM,CAAK,EAAA,EAAA,OAAO,CAAE,CAAA,EAAE,IAAI,KAAK,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;KAC9E;AACF,CAAA;AAED;;AAEG;AACH,MAAM,UAAU,CAAA;AACd;;AAEG;AACH,IAAA,SAAS,CAAC,MAAc,EAAA;AACtB,QAAA,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;KAC3B;AACF,CAAA;AAED;AACO,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE;;ACnDtC;AAKA,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AAiB3C;AACA,MAAM,gBAAgB,GAAoB;AACxC,IAAA;AACE,QAAA,EAAE,EAAE,OAAO;AACX,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,UAAU,EAAE,6CAA6C;AACzD,QAAA,OAAO,EAAE,6CAA6C;AACvD,KAAA;AACD,IAAA;AACE,QAAA,EAAE,EAAE,KAAK;AACT,QAAA,IAAI,EAAE,KAAK;AACX,QAAA,UAAU,EAAE,+BAA+B;AAC3C,QAAA,OAAO,EAAE,+BAA+B;AACzC,KAAA;CACF,CAAC;AAEF;AACA,IAAI,eAAe,GAAoB,EAAE,CAAC;AAC1C,IAAI,YAAY,GAAkB,IAAI,CAAC;AAEvC;AACA,SAAS,aAAa,CAAC,QAAkB,EAAA;;AAEvC,IAAA,IAAI,QAAQ,CAAC,UAAU,EAAE;QACtB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAsB,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC;KACnF;AACD,IAAA,IAAI,QAAQ,CAAC,WAAW,EAAE;;QAEvB,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAsB,CAAC,WAAW,GAAG,wBAAwB,CAAC;KAC/F;;AAGD,IAAA,eAAe,GAAG,QAAQ,CAAC,cAAc,IAAI,gBAAgB,CAAC;AAC9D,IAAA,oBAAoB,EAAE,CAAC;AACzB,CAAC;AAED;AACA,SAAS,oBAAoB,GAAA;IAC3B,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IACxD,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;AAE1D,IAAA,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU;QAAE,OAAO;;AAGlC,IAAA,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;;AAGrB,IAAA,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,QAAA,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QACnC,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAE,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;KACnE;SAAM;AACL,QAAA,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAClC,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAE,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;;QAGnE,eAAe,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,KAAI;YACzC,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;YAGzC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC5C,YAAA,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,EAAE,CAAC;AAChC,YAAA,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;YAGxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC9C,YAAA,QAAQ,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;AACpC,YAAA,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;;YAG1B,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpD,YAAA,cAAc,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC;AAChD,YAAA,GAAG,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;;YAGhC,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACjD,YAAA,WAAW,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC;AAC1C,YAAA,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;;YAG7B,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;YAGjD,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpD,YAAA,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC;AACpC,YAAA,UAAU,CAAC,WAAW,GAAG,MAAM,CAAC;AAChC,YAAA,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/D,YAAA,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;;YAGpC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;;YAGtD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACtD,YAAA,YAAY,CAAC,SAAS,GAAG,YAAY,CAAC;AACtC,YAAA,YAAY,CAAC,WAAW,GAAG,QAAQ,CAAC;AACpC,YAAA,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AACnE,YAAA,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AAEtC,YAAA,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AAE7B,YAAA,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACzB,SAAC,CAAC,CAAC;KACJ;AACH,CAAC;AAED;AACA,SAAS,WAAW,CAAC,KAAa,EAAA;AAChC,IAAA,MAAM,OAAO,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;;IAGtC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE,CAAC;IAC5E,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;IAChF,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;IACtF,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAsB,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC;;IAGjF,YAAY,GAAG,KAAK,CAAC;;IAGrB,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IACzD,IAAI,SAAS,EAAE;AACb,QAAA,SAAS,CAAC,WAAW,GAAG,cAAc,CAAC;KACxC;AACH,CAAC;AAED;AACA,SAAS,aAAa,CAAC,KAAa,EAAA;AAClC,IAAA,IAAI,OAAO,CAAC,CAAoC,iCAAA,EAAA,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAA,EAAA,CAAI,CAAC,EAAE;AAChF,QAAA,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACjC,QAAA,oBAAoB,EAAE,CAAC;;AAGvB,QAAA,IAAI,YAAY,KAAK,KAAK,EAAE;AAC1B,YAAA,gBAAgB,EAAE,CAAC;SACpB;KACF;AACH,CAAC;AAED;AACA,SAAS,kBAAkB,GAAA;;AAEzB,IAAA,MAAM,QAAQ,GAAI,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACxF,IAAA,MAAM,UAAU,GAAI,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AAC5F,IAAA,MAAM,UAAU,GAAI,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AAC5F,IAAA,MAAM,OAAO,GAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;;AAGtF,IAAA,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,EAAE;AACvD,QAAA,UAAU,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;QAC5C,OAAO;KACR;;AAGD,IAAA,IAAI;AACF,QAAA,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;AACvB,QAAA,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;KACrB;IAAC,OAAO,CAAC,EAAE;AACV,QAAA,UAAU,CAAC,CAA+B,4BAAA,EAAA,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;QACpG,OAAO;KACR;;IAGD,MAAM,YAAY,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,KAAK,KACvD,OAAO,CAAC,EAAE,KAAK,QAAQ,IAAI,KAAK,KAAK,YAAY,CAClD,CAAC;IAEF,IAAI,YAAY,EAAE;AAChB,QAAA,UAAU,CAAC,CAAc,WAAA,EAAA,QAAQ,wCAAwC,EAAE,IAAI,CAAC,CAAC;QACjF,OAAO;KACR;;AAGD,IAAA,MAAM,OAAO,GAAkB;AAC7B,QAAA,EAAE,EAAE,QAAQ;AACZ,QAAA,IAAI,EAAE,UAAU;QAChB,UAAU;QACV,OAAO;KACR,CAAC;;AAGF,IAAA,IAAI,YAAY,KAAK,IAAI,EAAE;;AAEzB,QAAA,eAAe,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC;;QAGxC,YAAY,GAAG,IAAI,CAAC;;QAGpB,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACzD,IAAI,SAAS,EAAE;AACb,YAAA,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC;SACvC;AAED,QAAA,UAAU,CAAC,CAAA,SAAA,EAAY,UAAU,CAAA,SAAA,CAAW,CAAC,CAAC;KAC/C;SAAM;;AAEL,QAAA,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9B,QAAA,UAAU,CAAC,CAAA,SAAA,EAAY,UAAU,CAAA,OAAA,CAAS,CAAC,CAAC;KAC7C;;AAGD,IAAA,oBAAoB,EAAE,CAAC;AACvB,IAAA,gBAAgB,EAAE,CAAC;AACrB,CAAC;AAED;AACA,SAAS,gBAAgB,GAAA;IACtB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC,KAAK,GAAG,EAAE,CAAC;IACpE,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC,KAAK,GAAG,EAAE,CAAC;IACtE,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC,KAAK,GAAG,EAAE,CAAC;IACtE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAsB,CAAC,KAAK,GAAG,EAAE,CAAC;;IAGpE,YAAY,GAAG,IAAI,CAAC;;IAGpB,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IACzD,IAAI,SAAS,EAAE;AACb,QAAA,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC;KACvC;AACH,CAAC;AAED;AACA,SAAS,WAAW,GAAA;;AAElB,IAAA,MAAM,UAAU,GAAI,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AAC5F,IAAA,MAAM,OAAO,GAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AAEtF,IAAA,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,EAAE;AAC3B,QAAA,UAAU,CAAC,yDAAyD,EAAE,IAAI,CAAC,CAAC;QAC5E,OAAO;KACR;;AAGD,IAAA,IAAI;AACF,QAAA,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;AACvB,QAAA,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;KACrB;IAAC,OAAO,CAAC,EAAE;AACV,QAAA,UAAU,CAAC,CAA+B,4BAAA,EAAA,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;QACpG,OAAO;KACR;;AAGD,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,oCAAoC,CAAC,CAAC;AAC7D,IAAA,IAAI,CAAC,OAAO;QAAE,OAAO;;AAGrB,IAAA,IAAI,QAAiB,CAAC;AACtB,IAAA,IAAI;AACF,QAAA,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;AACxC,QAAA,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnC;IAAC,OAAO,CAAC,EAAE;AACV,QAAA,UAAU,CAAC,CAA8B,2BAAA,EAAA,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;QACnG,OAAO;KACR;IAED,IAAI,CAAC,QAAQ,EAAE;AACb,QAAA,UAAU,CAAC,CAAA,kCAAA,CAAoC,EAAE,IAAI,CAAC,CAAC;QACvD,OAAO;KACR;;AAGD,IAAA,IAAI;AACF,QAAA,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;QAClC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,UAAU,CAAC,iCAAiC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,CAAC,CAAC;SAC1D;aAAM,IAAI,KAAK,EAAE;AAChB,YAAA,UAAU,CAAC,CAAA,mFAAA,CAAqF,EAAE,IAAI,CAAC,CAAC;SACzG;aAAM;AACL,YAAA,UAAU,CAAC,CAAA,uCAAA,CAAyC,EAAE,IAAI,CAAC,CAAC;SAC7D;KACF;IAAC,OAAO,CAAC,EAAE;AACV,QAAA,UAAU,CAAC,CAAmC,gCAAA,EAAA,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;KACzG;AACH,CAAC;AAED;AACA,SAAS,aAAa,GAAA;AACpB,IAAA,MAAM,UAAU,GAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACtF,IAAA,MAAM,WAAW,GAAI,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAExF,OAAO;QACL,UAAU,EAAE,UAAU,IAAI,SAAS;QACnC,WAAW,EAAE,WAAW,IAAI,SAAS;AACrC,QAAA,cAAc,EAAE,eAAe,CAAC,MAAM,GAAG,CAAC,GAAG,eAAe,GAAG,gBAAgB;KAChF,CAAC;AACJ,CAAC;AAED;AACA,SAAS,UAAU,CAAC,OAAe,EAAE,OAAO,GAAG,KAAK,EAAA;IAClD,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AACjD,IAAA,IAAI,CAAC,MAAM;QAAE,OAAO;AAEpB,IAAA,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC;AAC7B,IAAA,MAAM,CAAC,SAAS,GAAG,CAAA,OAAA,EAAU,OAAO,GAAG,OAAO,GAAG,SAAS,EAAE,CAAC;;IAG7D,IAAI,CAAC,OAAO,EAAE;QACZ,UAAU,CAAC,MAAK;YACd,IAAI,MAAM,EAAE;AACV,gBAAA,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC;AACxB,gBAAA,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;aAC7B;SACF,EAAE,IAAI,CAAC,CAAC;KACV;AACH,CAAC;AAED;AACA,eAAe,gBAAgB,CAAC,QAAkB,EAAA;;AAEhD,IAAA,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AACxE,QAAA,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;KACvE;;IAGD,IAAI,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,WAAW,EAAE;QAC/C,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,gCAAgC,QAAQ,CAAC,UAAU,CAAA,CAAE,EAAE;AAClF,YAAA,OAAO,EAAE;AACP,gBAAA,eAAe,EAAE,CAAA,MAAA,EAAS,QAAQ,CAAC,WAAW,CAAE,CAAA;AAChD,gBAAA,QAAQ,EAAE,gCAAgC;AAC3C,aAAA;AACF,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AAChB,YAAA,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;SAChF;KACF;;IAGD,IAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;AACxC,QAAA,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;KAC1D;;AAGD,IAAA,MAAM,KAAK,GAAG,IAAI,GAAG,EAAU,CAAC;AAChC,IAAA,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAC,cAAc,EAAE;QAC7C,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,CAAA,qBAAA,EAAwB,OAAO,CAAC,EAAE,CAAsC,oCAAA,CAAA,CAAC,CAAC;SAC3F;AACD,QAAA,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;KACvB;;AAGD,IAAA,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAC,cAAc,EAAE;AAC7C,QAAA,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;AACf,YAAA,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACjB,YAAA,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACvB,YAAA,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AACpB,YAAA,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAC7D;;AAGD,QAAA,IAAI;AACF,YAAA,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC/B,YAAA,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC7B;QAAC,OAAO,CAAC,EAAE;AACV,YAAA,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,eAAe,CAAA,CAAE,CAAC,CAAC;SACpG;KACF;AACH,CAAC;AAED;AACA,eAAe,YAAY,CAAC,QAAkB,EAAA;AAC5C,IAAA,IAAI;AACF,QAAA,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;YAC5B,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,cAAc,EAAE,QAAQ,CAAC,cAAc;AACxC,SAAA,CAAC,CAAC;AACH,QAAA,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;KAC5C;IAAC,OAAO,KAAK,EAAE;AACd,QAAA,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;AAC7C,QAAA,MAAM,KAAK,CAAC;KACb;AACH,CAAC;AAED;AACA,eAAe,YAAY,GAAA;AACzB,IAAA,IAAI;AACF,QAAA,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC;QAC7F,OAAO;YACL,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,WAAW,EAAE,KAAK,CAAC,WAAW;AAC9B,YAAA,cAAc,EAAE,KAAK,CAAC,cAAc,IAAI,gBAAgB;SACzD,CAAC;KACH;IAAC,OAAO,KAAK,EAAE;AACd,QAAA,MAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;AAC9C,QAAA,OAAO,EAAE,cAAc,EAAE,gBAAgB,EAAE,CAAC;KAC7C;AACH,CAAC;AAED;AACA,SAAS,cAAc,GAAA;AACrB,IAAA,IAAI;AACF,QAAA,MAAM,QAAQ,GAAG,aAAa,EAAE,CAAC;AACjC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC/C,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAC5D,MAAM,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;QAGtC,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACtC,QAAA,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;AACb,QAAA,CAAC,CAAC,QAAQ,GAAG,6BAA6B,CAAC;QAC3C,CAAC,CAAC,KAAK,EAAE,CAAC;;AAGV,QAAA,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAEzB,UAAU,CAAC,iCAAiC,CAAC,CAAC;KAC/C;IAAC,OAAO,KAAK,EAAE;AACd,QAAA,UAAU,CAAC,CAA6B,0BAAA,EAAA,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3G;AACH,CAAC;AAED;AACA,SAAS,cAAc,GAAA;;IAErB,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC9C,IAAA,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;AACpB,IAAA,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC;IAElC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,KAAK,KAAI;QAC/C,MAAM,IAAI,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC3D,QAAA,IAAI,CAAC,IAAI;YAAE,OAAO;AAElB,QAAA,IAAI;AACF,YAAA,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAa,CAAC;;AAG9C,YAAA,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAC;;AAGjC,YAAA,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC;AAC1C,YAAA,oBAAoB,EAAE,CAAC;;AAGvB,YAAA,IAAI,QAAQ,CAAC,UAAU,EAAE;gBACtB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAsB,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC;aACnF;AACD,YAAA,IAAI,QAAQ,CAAC,WAAW,EAAE;gBACvB,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAsB,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;aACrF;YAED,UAAU,CAAC,8DAA8D,CAAC,CAAC;SAC5E;QAAC,OAAO,KAAK,EAAE;AACd,YAAA,UAAU,CAAC,CAA6B,0BAAA,EAAA,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;SAC3G;AACH,KAAC,CAAC,CAAC;;IAGH,KAAK,CAAC,KAAK,EAAE,CAAC;AAChB,CAAC;AAED;AACA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;AACvD,IAAA,IAAI;;AAEF,QAAA,MAAM,QAAQ,GAAG,MAAM,YAAY,EAAE,CAAC;;QAGtC,aAAa,CAAC,QAAQ,CAAC,CAAC;;QAGxB,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACzD,IAAI,SAAS,EAAE;AACb,YAAA,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;SACzD;;QAGD,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;AACd,YAAA,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SACnD;;QAGD,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,UAAU,EAAE;AACd,YAAA,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAW;AAC9C,gBAAA,IAAI;AACF,oBAAA,MAAM,QAAQ,GAAG,aAAa,EAAE,CAAC;AACjC,oBAAA,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACjC,oBAAA,MAAM,YAAY,CAAC,QAAQ,CAAC,CAAC;oBAC7B,UAAU,CAAC,8BAA8B,CAAC,CAAC;iBAC5C;gBAAC,OAAO,KAAK,EAAE;AACd,oBAAA,UAAU,CAAC,CAAU,OAAA,EAAA,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;iBACxF;AACH,aAAC,CAAC,CAAC;SACJ;;QAGD,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;QAChE,IAAI,YAAY,EAAE;AAChB,YAAA,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;SACxD;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;QAChE,IAAI,YAAY,EAAE;AAChB,YAAA,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;SACxD;KACF;IAAC,OAAO,KAAK,EAAE;AACd,QAAA,UAAU,CAAC,CAA2B,wBAAA,EAAA,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC;KACzG;AACH,CAAC,CAAC"}