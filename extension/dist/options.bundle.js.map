{"version":3,"file":"options.bundle.js","sources":["../../utils/logger.ts","../../options.ts"],"sourcesContent":["// utils/logger.ts\n// Logging utility wrapping loguru\n\n/**\n * Logger class for consistent logging throughout the extension\n */\nexport class Logger {\n  constructor(private module: string) {}\n  \n  /**\n   * Log debug message\n   */\n  debug(message: string, data?: any): void {\n    console.debug(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log info message\n   */\n  info(message: string, data?: any): void {\n    console.info(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log warning message\n   */\n  warning(message: string, data?: any): void {\n    console.warn(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log error message\n   */\n  error(message: string, data?: any): void {\n    console.error(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n}\n\n/**\n * Loguru mock for browser extension use\n */\nclass LoguruMock {\n  /**\n   * Get logger for a module\n   */\n  getLogger(module: string): Logger {\n    return new Logger(module);\n  }\n}\n\n// Export singleton instance\nexport const loguru = new LoguruMock();\n","// options.ts\n// Paper tracker extension options page with full CRUD for URL patterns\n\nimport { loguru } from './utils/logger';\n\nconst logger = loguru.getLogger('options');\n\n// Types for URL patterns\nexport interface SourcePattern {\n  id: string;             // Unique identifier for this source\n  name: string;           // Display name for this source\n  urlPattern: string;     // Regex pattern to match URLs\n  idRegex: string;        // Regex to extract paper ID\n}\n\n// Types for all settings\nexport interface Settings {\n  githubRepo?: string;     // GitHub repository for storage\n  githubToken?: string;    // GitHub access token\n  sourcePatterns: SourcePattern[]; // URL patterns for paper detection\n}\n\n// Default URL patterns\nconst DEFAULT_PATTERNS: SourcePattern[] = [\n  {\n    id: 'arxiv',\n    name: 'arXiv',\n    urlPattern: 'arxiv\\\\.org\\\\/(abs|pdf)\\\\/([0-9]+\\\\.[0-9]+)',\n    idRegex: 'arxiv\\\\.org\\\\/(abs|pdf)\\\\/([0-9]+\\\\.[0-9]+)'\n  },\n  {\n    id: 'doi',\n    name: 'DOI',\n    urlPattern: 'doi\\\\.org\\\\/([\\\\w\\\\.\\\\-\\\\/]+)',\n    idRegex: 'doi\\\\.org\\\\/([\\\\w\\\\.\\\\-\\\\/]+)'\n  }\n];\n\n// Helper to set form values\nfunction setFormValues(settings: Settings): void {\n  // GitHub settings\n  if (settings.githubRepo) {\n    (document.getElementById('repo') as HTMLInputElement).value = settings.githubRepo;\n  }\n  if (settings.githubToken) {\n    // Don't show the actual token, just indicate it's set\n    (document.getElementById('token') as HTMLInputElement).placeholder = '••••••••••••••••••••••';\n  }\n\n  // Clear existing pattern containers\n  const patternsContainer = document.getElementById('patterns-container');\n  if (patternsContainer) {\n    patternsContainer.innerHTML = '';\n  }\n  \n  // Add URL patterns\n  const patterns = settings.sourcePatterns || DEFAULT_PATTERNS;\n  patterns.forEach((pattern, index) => {\n    addPatternContainer(index, pattern);\n  });\n}\n\n// Helper to create a new pattern container\nfunction addPatternContainer(index: number, pattern?: SourcePattern): void {\n  const patternsContainer = document.getElementById('patterns-container');\n  if (!patternsContainer) return;\n  \n  // Get the template\n  const template = document.getElementById('pattern-template') as HTMLTemplateElement;\n  if (!template) return;\n  \n  // Clone the template\n  const clone = document.importNode(template.content, true);\n  \n  // Set unique IDs and values\n  const container = clone.querySelector('.pattern-container') as HTMLElement;\n  if (!container) return;\n  \n  container.dataset.index = index.toString();\n  \n  // Find and set values for inputs\n  const sourceIdInput = clone.querySelector(`#sourceId-$INDEX`) as HTMLInputElement;\n  const sourceNameInput = clone.querySelector(`#sourceName-$INDEX`) as HTMLInputElement;\n  const urlPatternInput = clone.querySelector(`#urlPattern-$INDEX`) as HTMLInputElement;\n  const idRegexInput = clone.querySelector(`#idRegex-$INDEX`) as HTMLInputElement;\n  \n  if (!sourceIdInput || !sourceNameInput || !urlPatternInput || !idRegexInput) return;\n  \n  // Update IDs\n  sourceIdInput.id = `sourceId-${index}`;\n  sourceNameInput.id = `sourceName-${index}`;\n  urlPatternInput.id = `urlPattern-${index}`;\n  idRegexInput.id = `idRegex-${index}`;\n  \n  // Mark any existing patterns with data attribute\n  if (pattern) {\n    container.dataset.existing = 'true';\n    \n    // Store original ID for reference if pattern is edited\n    container.dataset.originalId = pattern.id;\n    \n    // Set values\n    sourceIdInput.value = pattern.id || '';\n    sourceNameInput.value = pattern.name || '';\n    urlPatternInput.value = pattern.urlPattern || '';\n    idRegexInput.value = pattern.idRegex || '';\n  }\n  \n  // Add remove button handler\n  const removeButton = clone.querySelector('.remove-pattern') as HTMLButtonElement;\n  if (removeButton) {\n    removeButton.addEventListener('click', () => {\n      // If this is an existing pattern, confirm deletion\n      if (container.dataset.existing === 'true') {\n        if (confirm(`Are you sure you want to remove the \"${sourceNameInput.value}\" source?`)) {\n          container.remove();\n          updatePatternsDisplay();\n        }\n      } else {\n        container.remove();\n        updatePatternsDisplay();\n      }\n    });\n  }\n  \n  // Add test button handlers\n  const testUrlPatternButton = clone.querySelector('.test-url-pattern') as HTMLButtonElement;\n  const urlPatternResult = clone.querySelector('.url-pattern-result') as HTMLElement;\n  \n  if (testUrlPatternButton && urlPatternResult) {\n    testUrlPatternButton.addEventListener('click', () => {\n      testUrlPattern(urlPatternInput.value, urlPatternResult);\n    });\n  }\n  \n  const testIdRegexButton = clone.querySelector('.test-id-regex') as HTMLButtonElement;\n  const idRegexResult = clone.querySelector('.id-regex-result') as HTMLElement;\n  \n  if (testIdRegexButton && idRegexResult) {\n    testIdRegexButton.addEventListener('click', () => {\n      testIdRegex(idRegexInput.value, urlPatternInput.value, idRegexResult);\n    });\n  }\n  \n  // Append to container\n  patternsContainer.appendChild(clone);\n  \n  // Update no patterns message\n  updatePatternsDisplay();\n}\n\n// Test URL pattern against an example URL\nfunction testUrlPattern(pattern: string, resultElement: HTMLElement): void {\n  try {\n    // Prompt for a test URL\n    const testUrl = prompt('Enter a URL to test against this pattern:');\n    if (!testUrl) return;\n    \n    // Create regex from pattern\n    const regex = new RegExp(pattern);\n    \n    // Test the URL\n    const match = regex.test(testUrl);\n    \n    // Display result\n    if (match) {\n      resultElement.textContent = `✅ URL matches pattern`;\n      resultElement.className = 'validation-result valid';\n    } else {\n      resultElement.textContent = `❌ URL does not match pattern`;\n      resultElement.className = 'validation-result invalid';\n    }\n  } catch (error) {\n    resultElement.textContent = `❌ Invalid regex: ${error instanceof Error ? error.message : 'Unknown error'}`;\n    resultElement.className = 'validation-result invalid';\n  }\n}\n\n// Test ID regex against an example URL\nfunction testIdRegex(idPattern: string, urlPattern: string, resultElement: HTMLElement): void {\n  try {\n    // Prompt for a test URL\n    const testUrl = prompt('Enter a URL to test paper ID extraction:');\n    if (!testUrl) return;\n    \n    // First check if URL matches the URL pattern\n    let urlMatch = true;\n    try {\n      const urlRegex = new RegExp(urlPattern);\n      urlMatch = urlRegex.test(testUrl);\n    } catch (e) {\n      urlMatch = false;\n    }\n    \n    if (!urlMatch) {\n      resultElement.textContent = `❌ URL doesn't match the URL pattern`;\n      resultElement.className = 'validation-result invalid';\n      return;\n    }\n    \n    // Create regex from pattern\n    const regex = new RegExp(idPattern);\n    \n    // Test the URL\n    const match = testUrl.match(regex);\n    \n    // Display result\n    if (match && match.length > 1) {\n      resultElement.textContent = `✅ Extracted ID: \"${match[1]}\"`;\n      resultElement.className = 'validation-result valid';\n    } else if (match) {\n      resultElement.textContent = `⚠️ Pattern matched but no capture group found. Add parentheses around the ID part.`;\n      resultElement.className = 'validation-result invalid';\n    } else {\n      resultElement.textContent = `❌ URL does not match pattern`;\n      resultElement.className = 'validation-result invalid';\n    }\n  } catch (error) {\n    resultElement.textContent = `❌ Invalid regex: ${error instanceof Error ? error.message : 'Unknown error'}`;\n    resultElement.className = 'validation-result invalid';\n  }\n}\n\n// Update the no patterns message display\nfunction updatePatternsDisplay(): void {\n  const patternsContainer = document.getElementById('patterns-container');\n  const noPatterns = document.getElementById('no-patterns');\n  \n  if (!patternsContainer || !noPatterns) return;\n  \n  const hasPatterns = patternsContainer.children.length > 0;\n  \n  noPatterns.style.display = hasPatterns ? 'none' : 'block';\n}\n\n// Helper to get form values\nfunction getFormValues(): Settings {\n  const githubRepo = (document.getElementById('repo') as HTMLInputElement).value.trim();\n  const githubToken = (document.getElementById('token') as HTMLInputElement).value.trim();\n  \n  // Get all pattern containers\n  const patternContainers = document.querySelectorAll('.pattern-container');\n  const sourcePatterns: SourcePattern[] = [];\n  \n  patternContainers.forEach((container) => {\n    const index = (container as HTMLElement).dataset.index;\n    if (!index) return;\n    \n    const sourceId = (document.getElementById(`sourceId-${index}`) as HTMLInputElement).value.trim();\n    const sourceName = (document.getElementById(`sourceName-${index}`) as HTMLInputElement).value.trim();\n    const urlPattern = (document.getElementById(`urlPattern-${index}`) as HTMLInputElement).value.trim();\n    const idRegex = (document.getElementById(`idRegex-${index}`) as HTMLInputElement).value.trim();\n    \n    if (sourceId && sourceName && urlPattern && idRegex) {\n      sourcePatterns.push({\n        id: sourceId,\n        name: sourceName,\n        urlPattern,\n        idRegex\n      });\n    }\n  });\n  \n  return {\n    githubRepo: githubRepo || undefined,\n    githubToken: githubToken || undefined,\n    sourcePatterns: sourcePatterns.length > 0 ? sourcePatterns : DEFAULT_PATTERNS\n  };\n}\n\n// Display status message\nfunction showStatus(message: string, isError = false): void {\n  const status = document.getElementById('status');\n  if (!status) return;\n  \n  status.textContent = message;\n  status.className = `status ${isError ? 'error' : 'success'}`;\n\n  // Clear status after 3 seconds if it's a success message\n  if (!isError) {\n    setTimeout(() => {\n      if (status) {\n        status.textContent = '';\n        status.className = 'status';\n      }\n    }, 3000);\n  }\n}\n\n// Validate settings before saving\nasync function validateSettings(settings: Settings): Promise<void> {\n  // Validate repository format if provided\n  if (settings.githubRepo && !/^[\\w-]+\\/[\\w-]+$/.test(settings.githubRepo)) {\n    throw new Error('Invalid repository format. Use username/repository');\n  }\n\n  // Validate the token by making a test API call if both token and repo are provided\n  if (settings.githubRepo && settings.githubToken) {\n    const response = await fetch(`https://api.github.com/repos/${settings.githubRepo}`, {\n      headers: {\n        'Authorization': `token ${settings.githubToken}`,\n        'Accept': 'application/vnd.github.v3+json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Invalid token or repository. Please check your credentials.');\n    }\n  }\n\n  // Validate URL patterns\n  if (settings.sourcePatterns.length === 0) {\n    throw new Error('At least one URL pattern is required.');\n  }\n  \n  // Check for duplicate IDs\n  const idSet = new Set<string>();\n  for (const pattern of settings.sourcePatterns) {\n    if (idSet.has(pattern.id)) {\n      throw new Error(`Duplicate source ID: ${pattern.id}. Each source must have a unique ID.`);\n    }\n    idSet.add(pattern.id);\n  }\n  \n  // Validate each pattern\n  for (const pattern of settings.sourcePatterns) {\n    if (!pattern.id) {\n      throw new Error('Each pattern must have a source ID.');\n    }\n    if (!pattern.name) {\n      throw new Error('Each pattern must have a source name.');\n    }\n    if (!pattern.urlPattern) {\n      throw new Error('Each pattern must have a URL pattern.');\n    }\n    if (!pattern.idRegex) {\n      throw new Error('Each pattern must have a paper ID regex.');\n    }\n    \n    // Check that patterns are valid regex\n    try {\n      new RegExp(pattern.urlPattern);\n      new RegExp(pattern.idRegex);\n    } catch (e) {\n      throw new Error(`Invalid regular expression: ${e instanceof Error ? e.message : 'Unknown error'}`);\n    }\n  }\n}\n\n// Save settings\nasync function saveSettings(settings: Settings): Promise<void> {\n  try {\n    await chrome.storage.sync.set({\n      githubRepo: settings.githubRepo,\n      githubToken: settings.githubToken,\n      sourcePatterns: settings.sourcePatterns\n    });\n    logger.info('Settings saved successfully');\n  } catch (error) {\n    logger.error('Error saving settings', error);\n    throw error;\n  }\n}\n\n// Load settings\nasync function loadSettings(): Promise<Settings> {\n  try {\n    const items = await chrome.storage.sync.get(['githubRepo', 'githubToken', 'sourcePatterns']);\n    return {\n      githubRepo: items.githubRepo,\n      githubToken: items.githubToken,\n      sourcePatterns: items.sourcePatterns || DEFAULT_PATTERNS\n    };\n  } catch (error) {\n    logger.error('Error loading settings', error);\n    return { sourcePatterns: DEFAULT_PATTERNS };\n  }\n}\n\n// Initialize options page\ndocument.addEventListener('DOMContentLoaded', async () => {\n  try {\n    // Load current settings\n    const settings = await loadSettings();\n    \n    // Apply settings to form\n    setFormValues(settings);\n    \n    // Update no patterns message\n    updatePatternsDisplay();\n    \n    // Set up add pattern button\n    const addPatternButton = document.getElementById('add-pattern');\n    if (addPatternButton) {\n      addPatternButton.addEventListener('click', () => {\n        const index = document.querySelectorAll('.pattern-container').length;\n        addPatternContainer(index);\n      });\n    }\n\n    // Add save button handler\n    const saveButton = document.getElementById('save');\n    if (saveButton) {\n      saveButton.addEventListener('click', async () => {\n        try {\n          const settings = getFormValues();\n          await validateSettings(settings);\n          await saveSettings(settings);\n          showStatus('Settings saved successfully!');\n        } catch (error) {\n          showStatus(`Error: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n        }\n      });\n    }\n    \n    // Add export/import buttons\n    const exportButton = document.getElementById('export-settings');\n    if (exportButton) {\n      exportButton.addEventListener('click', () => {\n        exportSettings();\n      });\n    }\n    \n    const importButton = document.getElementById('import-settings');\n    if (importButton) {\n      importButton.addEventListener('click', () => {\n        importSettings();\n      });\n    }\n  } catch (error) {\n    showStatus(`Error loading settings: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n  }\n});\n\n// Export settings to JSON file\nfunction exportSettings(): void {\n  try {\n    const settings = getFormValues();\n    const json = JSON.stringify(settings, null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    \n    // Create download link\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'paper-tracker-settings.json';\n    a.click();\n    \n    // Clean up\n    URL.revokeObjectURL(url);\n    \n    showStatus('Settings exported successfully!');\n  } catch (error) {\n    showStatus(`Error exporting settings: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n  }\n}\n\n// Import settings from JSON file\nfunction importSettings(): void {\n  // Create file input\n  const input = document.createElement('input');\n  input.type = 'file';\n  input.accept = 'application/json';\n  \n  input.addEventListener('change', async (event) => {\n    const file = (event.target as HTMLInputElement).files?.[0];\n    if (!file) return;\n    \n    try {\n      const text = await file.text();\n      const settings = JSON.parse(text) as Settings;\n      \n      // Validate imported settings\n      await validateSettings(settings);\n      \n      // Apply settings to form\n      setFormValues(settings);\n      \n      showStatus('Settings imported successfully! Click Save to apply changes.');\n    } catch (error) {\n      showStatus(`Error importing settings: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n    }\n  });\n  \n  // Trigger file selection\n  input.click();\n}\n"],"names":[],"mappings":"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"}