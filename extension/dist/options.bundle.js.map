{"version":3,"file":"options.bundle.js","sources":["../../utils/logger.ts","../../options.ts"],"sourcesContent":["// utils/logger.ts\n// Logging utility wrapping loguru\n\n/**\n * Logger class for consistent logging throughout the extension\n */\nexport class Logger {\n  constructor(private module: string) {}\n  \n  /**\n   * Log debug message\n   */\n  debug(message: string, data?: any): void {\n    console.debug(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log info message\n   */\n  info(message: string, data?: any): void {\n    console.info(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log warning message\n   */\n  warning(message: string, data?: any): void {\n    console.warn(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n  \n  /**\n   * Log error message\n   */\n  error(message: string, data?: any): void {\n    console.error(`[${this.module}] ${message}`, data !== undefined ? data : '');\n  }\n}\n\n/**\n * Loguru mock for browser extension use\n */\nclass LoguruMock {\n  /**\n   * Get logger for a module\n   */\n  getLogger(module: string): Logger {\n    return new Logger(module);\n  }\n}\n\n// Export singleton instance\nexport const loguru = new LoguruMock();\n","// options.ts\n// Paper tracker extension options page with direct JSON editing\n\nimport { loguru } from './utils/logger';\n\nconst logger = loguru.getLogger('options');\n\n// Types for URL patterns\nexport interface SourcePattern {\n  id: string;             // Unique identifier for this source\n  name: string;           // Display name for this source\n  urlPattern: string;     // Regex pattern to match URLs\n  idRegex: string;        // Regex to extract paper ID\n}\n\n// Types for all settings\nexport interface Settings {\n  githubRepo?: string;     // GitHub repository for storage\n  githubToken?: string;    // GitHub access token\n  sourcePatterns: SourcePattern[]; // URL patterns for paper detection\n}\n\n// Default URL patterns\nconst DEFAULT_PATTERNS: SourcePattern[] = [\n  {\n    id: 'arxiv',\n    name: 'arXiv',\n    urlPattern: 'arxiv\\\\.org\\\\/(abs|pdf)\\\\/([0-9]+\\\\.[0-9]+)',\n    idRegex: 'arxiv\\\\.org\\\\/(abs|pdf)\\\\/([0-9]+\\\\.[0-9]+)'\n  },\n  {\n    id: 'doi',\n    name: 'DOI',\n    urlPattern: 'doi\\\\.org\\\\/([\\\\w\\\\.\\\\-\\\\/]+)',\n    idRegex: 'doi\\\\.org\\\\/([\\\\w\\\\.\\\\-\\\\/]+)'\n  }\n];\n\n// Load settings and populate the form\nasync function loadSettingsIntoForm(): Promise<void> {\n  try {\n    const settings = await loadSettings();\n    \n    // Set GitHub fields\n    if (settings.githubRepo) {\n      (document.getElementById('repo') as HTMLInputElement).value = settings.githubRepo;\n    }\n    \n    if (settings.githubToken) {\n      // If token exists in storage but not in the input field, it means we're loading the page\n      const tokenInput = document.getElementById('token') as HTMLInputElement;\n      \n      if (tokenInput.value === '' && settings.githubToken) {\n        // Just set the placeholder to indicate a token is set\n        tokenInput.placeholder = '••••••••••••••••••••••';\n      }\n    }\n    \n    // Set patterns JSON\n    const patternsElem = document.getElementById('patterns') as HTMLTextAreaElement;\n    if (patternsElem) {\n      // Always populate with current patterns from storage or defaults\n      patternsElem.value = JSON.stringify(settings.sourcePatterns, null, 2);\n    }\n    \n    logger.debug('Settings loaded into form');\n  } catch (error) {\n    showStatus(`Error loading settings: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n  }\n}\n\n// Save settings from the form\nasync function saveSettingsFromForm(): Promise<void> {\n  try {\n    // Get GitHub settings\n    const githubRepo = (document.getElementById('repo') as HTMLInputElement).value.trim();\n    \n    // For the token, we need to handle the case where it's not changed\n    let githubToken;\n    const tokenInput = document.getElementById('token') as HTMLInputElement;\n    const tokenValue = tokenInput.value.trim();\n    \n    if (tokenValue === '' && tokenInput.placeholder === '••••••••••••••••••••••') {\n      // Token input is empty but placeholder shows a token exists - keep existing token\n      const existingSettings = await loadSettings();\n      githubToken = existingSettings.githubToken;\n    } else {\n      // Use new token value (which might be empty to clear the token)\n      githubToken = tokenValue;\n    }\n    \n    // Get patterns JSON\n    const patternsText = (document.getElementById('patterns') as HTMLTextAreaElement).value.trim();\n    let sourcePatterns: SourcePattern[] = [];\n    \n    try {\n      // Parse patterns JSON\n      sourcePatterns = JSON.parse(patternsText) as SourcePattern[];\n    } catch (error) {\n      throw new Error(`Invalid JSON format for patterns: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n    \n    // Create settings object\n    const settings: Settings = {\n      githubRepo: githubRepo || undefined,\n      githubToken: githubToken || undefined,\n      sourcePatterns: sourcePatterns.length > 0 ? sourcePatterns : DEFAULT_PATTERNS\n    };\n    \n    // Validate settings\n    await validateSettings(settings);\n    \n    // Save settings\n    await saveSettings(settings);\n    \n    showStatus('Settings saved successfully!');\n  } catch (error) {\n    showStatus(`Error saving settings: ${error instanceof Error ? error.message : 'Unknown error'}`, true);\n  }\n}\n\n// Load settings from storage\nasync function loadSettings(): Promise<Settings> {\n  try {\n    const items = await chrome.storage.sync.get(['githubRepo', 'githubToken', 'sourcePatterns']);\n    \n    return {\n      githubRepo: items.githubRepo,\n      githubToken: items.githubToken,\n      sourcePatterns: items.sourcePatterns || DEFAULT_PATTERNS\n    };\n  } catch (error) {\n    logger.error('Error loading settings from storage', error);\n    return { sourcePatterns: DEFAULT_PATTERNS };\n  }\n}\n\n// Save settings to storage\nasync function saveSettings(settings: Settings): Promise<void> {\n  try {\n    await chrome.storage.sync.set({\n      githubRepo: settings.githubRepo,\n      githubToken: settings.githubToken,\n      sourcePatterns: settings.sourcePatterns\n    });\n    \n    logger.info('Settings saved to storage successfully');\n  } catch (error) {\n    logger.error('Error saving settings to storage', error);\n    throw error;\n  }\n}\n\n// Validate settings\nasync function validateSettings(settings: Settings): Promise<void> {\n  // Validate GitHub repo format\n  if (settings.githubRepo && !/^[\\w-]+\\/[\\w-]+$/.test(settings.githubRepo)) {\n    throw new Error('Invalid repository format. Use username/repository');\n  }\n  \n  // Validate GitHub token by testing API if both token and repo are provided\n  if (settings.githubRepo && settings.githubToken) {\n    try {\n      const response = await fetch(`https://api.github.com/repos/${settings.githubRepo}`, {\n        headers: {\n          'Authorization': `token ${settings.githubToken}`,\n          'Accept': 'application/vnd.github.v3+json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`GitHub API returned status ${response.status}`);\n      }\n    } catch (error) {\n      throw new Error(`Invalid GitHub token or repository: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n  \n  // Validate source patterns\n  if (!Array.isArray(settings.sourcePatterns) || settings.sourcePatterns.length === 0) {\n    throw new Error('At least one URL pattern is required');\n  }\n  \n  // Check for duplicate IDs\n  const idSet = new Set<string>();\n  \n  for (const pattern of settings.sourcePatterns) {\n    // Check required fields\n    if (!pattern.id) {\n      throw new Error('Each pattern must have an ID');\n    }\n    if (!pattern.name) {\n      throw new Error('Each pattern must have a name');\n    }\n    if (!pattern.urlPattern) {\n      throw new Error('Each pattern must have a URL pattern');\n    }\n    if (!pattern.idRegex) {\n      throw new Error('Each pattern must have a paper ID regex');\n    }\n    \n    // Check for duplicate IDs\n    if (idSet.has(pattern.id)) {\n      throw new Error(`Duplicate source ID: ${pattern.id}. Each source must have a unique ID.`);\n    }\n    idSet.add(pattern.id);\n    \n    // Validate regex patterns\n    try {\n      new RegExp(pattern.urlPattern);\n    } catch (error) {\n      throw new Error(`Invalid URL pattern for ${pattern.id}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n    \n    try {\n      new RegExp(pattern.idRegex);\n    } catch (error) {\n      throw new Error(`Invalid paper ID regex for ${pattern.id}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n}\n\n// Show status message\nfunction showStatus(message: string, isError = false): void {\n  const status = document.getElementById('status');\n  if (!status) return;\n  \n  status.textContent = message;\n  status.className = `status ${isError ? 'error' : 'success'}`;\n  \n  // Clear message after 3 seconds if it's a success\n  if (!isError) {\n    setTimeout(() => {\n      if (status) {\n        status.textContent = '';\n        status.className = 'status';\n      }\n    }, 3000);\n  }\n}\n\n// Initialize options page\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Load settings\n  loadSettingsIntoForm();\n  \n  // Set up save button handler\n  document.getElementById('save')?.addEventListener('click', saveSettingsFromForm);\n});\n"],"names":[],"mappings":"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"}